@page "/EditPerson"
@page "/EditPerson/{id}"
@using BlazorExample.Shared
@inject Csla.Blazor.ViewModel<PersonEdit> vm
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles="Admin")]

<h1>Edit Person</h1>

<p>This component demonstrates editing a BusinessBase-derived object.</p>

<p style="background-color:red;color:white">@vm.ViewModelErrorText</p>

@if (vm.Model == null)
{
  <p>Loading Person...</p>
}
else
{
  <p>
    <a href="listpersons">List of people</a><br />
    <a href="editperson">Add person</a>
  </p>
  <table class="table">
    <thead>
      <tr>
        <th></th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Id</td>
        <td>@vm.Model.Id</td>
      </tr>
      <tr>
        <td>Name</td>
        <td>
          <div>
            <input @bind-value="vm.Model.Name" @bind-value:event="oninput" /><br />
            <span csla-error-for="Model.Name">foo</span>
            <span class="text-danger">@vm.GetPropertyInfo(nameof(vm.Model.Name)).ErrorText</span>
            <span class="text-warning">@vm.GetPropertyInfo(nameof(vm.Model.Name)).WarningText</span>
            <span class="text-info">@vm.GetPropertyInfo(nameof(vm.Model.Name)).InformationText</span>
          </div>
        </td>
      </tr>
      <tr>
        <td>IsNew</td>
        <td>@vm.Model.IsNew</td>
      </tr>
      <tr>
        <td>IsSavable</td>
        <td>@vm.Model.IsSavable</td>
      </tr>
    </tbody>
  </table>
  <button @onclick="vm.SaveAsync" disabled="@(!vm.Model.IsSavable)">Save person</button>
}

@code {
  [Parameter]
  public string id { get; set; }

  protected override async Task OnInitializedAsync()
  {
    vm.Saved += () => NavigationManager.NavigateTo("listpersons");

    if (string.IsNullOrWhiteSpace(id))
      await vm.RefreshAsync();
    else
      await vm.RefreshAsync(int.Parse(id));
  }
}
